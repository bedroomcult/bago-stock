-- Database schema for Manajemen Stok Bago

-- Create users table
CREATE TABLE users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL DEFAULT 'staff', -- 'admin' or 'staff'
    full_name VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    last_login TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE
);

-- Create product_templates table
CREATE TABLE product_templates (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category VARCHAR(100) NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    colors JSONB DEFAULT '[{"name": "Default", "hex": "#3B82F6"}]', -- Array of color objects with name and hex code
    is_active BOOLEAN DEFAULT TRUE,
    created_by INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Create products table
CREATE TABLE products (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    qr_code VARCHAR(255) UNIQUE, -- The QR code identifier (nullable for dalam_proses products)
    category VARCHAR(100) NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    color VARCHAR(255) DEFAULT '#3B82F6', -- Hex color code for visual identification (copied from template)
    status VARCHAR(100) NOT NULL DEFAULT 'TOKO', -- 'TOKO', 'GUDANG KEPATHIAN', 'GUDANG NGUNUT', 'TERJUAL'
    dalam_proses BOOLEAN DEFAULT FALSE, -- Flag for products currently in manufacturing process
    registered_by INTEGER REFERENCES users(id),
    registered_at TIMESTAMP DEFAULT NOW(),
    updated_by INTEGER REFERENCES users(id),
    updated_at TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW()
);

-- Create activity_logs table
CREATE TABLE activity_logs (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    action VARCHAR(100) NOT NULL, -- 'LOGIN', 'REGISTER_PRODUCT', 'UPDATE_PRODUCT', 'GENERATE_QR', etc.
    table_name VARCHAR(100), -- Name of the table affected
    record_id INTEGER, -- ID of the record affected
    old_values JSONB, -- Store previous values as JSON
    new_values JSONB, -- Store new values as JSON
    ip_address INET,
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Create system_settings table
CREATE TABLE system_settings (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    setting_name VARCHAR(100) UNIQUE NOT NULL,
    setting_value TEXT,
    description TEXT,
    updated_by INTEGER REFERENCES users(id),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Create qr_codes table for tracking generated QR codes
CREATE TABLE qr_codes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    qr_code VARCHAR(255) UNIQUE NOT NULL, -- The QR code identifier (e.g., BAGO000001)
    is_used BOOLEAN DEFAULT FALSE, -- Whether this code has been registered as a product
    used_by INTEGER REFERENCES users(id), -- User who registered this code
    used_at TIMESTAMP, -- When the code was registered
    created_at TIMESTAMP DEFAULT NOW(),
    created_by INTEGER REFERENCES users(id) -- User who generated this code
);

-- Create low_stock_alerts table
CREATE TABLE low_stock_alerts (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
    category VARCHAR(100) NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    current_stock INTEGER NOT NULL,
    threshold_type VARCHAR(20) NOT NULL, -- 'low' or 'critical'
    is_resolved BOOLEAN DEFAULT FALSE,
    resolved_by INTEGER REFERENCES users(id),
    resolved_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Create sessions table (for managing user sessions if needed)
CREATE TABLE sessions (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    session_token VARCHAR(255) UNIQUE NOT NULL,
    ip_address INET,
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    expires_at TIMESTAMP NOT NULL
);

-- Insert default users
INSERT INTO users (username, password, role, full_name) VALUES
('admin', 'admin123', 'admin', 'Admin User');
INSERT INTO users (username, password, role, full_name) VALUES
('manager', 'manager123', 'admin', 'Manager User');
INSERT INTO users (username, password, role, full_name) VALUES
('staff1', 'staff123', 'staff', 'Staff User 1');
INSERT INTO users (username, password, role, full_name) VALUES
('staff2', 'staff123', 'staff', 'Staff User 2');

-- Insert default product templates
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Sofa', 'Sofa 2 Seater', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Sofa', 'Sofa 3 Seater', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Sofa', 'Sofa Sudut', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Kursi', 'Kursi Makan', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Kursi', 'Kursi Kantor', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Meja', 'Meja Makan', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Meja', 'Meja Belajar', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Sungkai', 'Sungkai Panjang', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Sungkai', 'Sungkai Pendek', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Nakas', 'Nakas Minimalis', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Nakas', 'Nakas Sudut', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Buffet', 'Buffet TV', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));
INSERT INTO product_templates (category, product_name, created_by) VALUES
('Buffet', 'Buffet Minimalis', (SELECT id FROM users WHERE username = 'admin' LIMIT 1));

-- Create indexes for better performance
CREATE INDEX idx_products_qr_code ON products(qr_code);
CREATE INDEX idx_products_category ON products(category);
CREATE INDEX idx_products_status ON products(status);
CREATE INDEX idx_products_registered_by ON products(registered_by);
CREATE INDEX idx_products_updated_by ON products(updated_by);
CREATE INDEX idx_qr_codes_qr_code ON qr_codes(qr_code);
CREATE INDEX idx_qr_codes_is_used ON qr_codes(is_used);
CREATE INDEX idx_qr_codes_created_by ON qr_codes(created_by);
CREATE INDEX idx_activity_logs_user_id ON activity_logs(user_id);
CREATE INDEX idx_activity_logs_created_at ON activity_logs(created_at);
CREATE INDEX idx_low_stock_alerts_product_id ON low_stock_alerts(product_id);
CREATE INDEX idx_low_stock_alerts_resolved ON low_stock_alerts(is_resolved);
